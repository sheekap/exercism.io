[{:slug=>"accumulate", :blurb=>"Implement the `accumulate` operation, which, given a collection and an operation to perform on each element of the collection, returns a new collection containing the result of applying that operation to each element of the input collection.", :name=>"Accumulate"}, {:slug=>"acronym", :blurb=>"Convert a long phrase to its acronym", :name=>"Acronym"}, {:slug=>"allergies", :blurb=>"Write a program that, given a person's allergy score, can tell them whether or not they're allergic to a given item, and their full list of allergies.", :name=>"Allergies"}, {:slug=>"anagram", :blurb=>"Write a program that, given a word and a list of possible anagrams, selects the correct sublist.", :name=>"Anagram"}, {:slug=>"atbash-cipher", :blurb=>"Create an implementation of the atbash cipher, an ancient encryption system created in the Middle East.", :name=>"Atbash Cipher"}, {:slug=>"beer-song", :blurb=>"Write a program which produces the lyrics to that beloved classic, that field-trip favorite: 99 Bottles of Beer on the Wall.", :name=>"Beer Song"}, {:slug=>"binary", :blurb=>"Write a program that will convert a binary number, represented as a string (e.g. '101010'), to its decimal equivalent using first principles", :name=>"Binary"}, {:slug=>"binary-search", :blurb=>"Write a program that implements a binary search algorithm.", :name=>"Binary Search"}, {:slug=>"binary-search-tree", :blurb=>"Write a program that inserts numbers and searches in a binary tree.", :name=>"Binary Search Tree"}, {:slug=>"bob", :blurb=>"Bob is a lackadaisical teenager. In conversation, his responses are very limited.", :name=>"Bob"}, {:slug=>"circular-buffer", :blurb=>"A data structure that uses a single, fixed-size buffer as if it were connected end-to-end.", :name=>"Circular Buffer"}, {:slug=>"clock", :blurb=>"Implement a clock that handles times without dates.", :name=>"Clock"}, {:slug=>"crypto-square", :blurb=>"Implement the classic method for composing secret messages called a square code.", :name=>"Crypto Square"}, {:slug=>"custom-set", :blurb=>"Create a custom set type.", :name=>"Custom Set"}, {:slug=>"difference-of-squares", :blurb=>"Find the difference between the sum of the squares and the square of the sums of the first N natural numbers.", :name=>"Difference Of Squares"}, {:slug=>"etl", :blurb=>"We are going to do the `Transform` step of an Extract-Transform-Load.", :name=>"Etl"}, {:slug=>"food-chain", :blurb=>"Write a program that outputs the lyrics of the song 'I Know an Old Lady Who Swallowed a Fly'", :name=>"Food Chain"}, {:slug=>"gigasecond", :blurb=>"Write a program that will calculate the date that someone turned or will celebrate their 1 Gs anniversary.", :name=>"Gigasecond"}, {:slug=>"grade-school", :blurb=>"Write a small archiving program that stores students' names along with the grade that they are in.", :name=>"Grade School"}, {:slug=>"grains", :blurb=>"Write a program that calculates the number of grains of wheat on a chessboard given that the number on each square doubles.", :name=>"Grains"}, {:slug=>"hamming", :blurb=>"Write a program that can calculate the Hamming difference between two DNA strands.", :name=>"Hamming"}, {:slug=>"hello-world", :blurb=>"Write a program that greets the user by name, or by saying \"Hello, World!\" if no name is given.", :name=>"Hello World"}, {:slug=>"hexadecimal", :blurb=>"Write a program that will convert a hexadecimal number, represented as a string (e.g. \"10af8c\"), to its decimal equivalent using first principles (i.e. no, you may not use built-in ruby libraries or gems to accomplish the conversion).", :name=>"Hexadecimal"}, {:slug=>"house", :blurb=>"Write a program that outputs the nursery rhyme 'This is the House that Jack Built'.", :name=>"House"}, {:slug=>"kindergarten-garden", :blurb=>"Write a program that, given a diagram, can tell you which plants each child in the kindergarten class is responsible for.", :name=>"Kindergarten Garden"}, {:slug=>"largest-series-product", :blurb=>"Write a program that, when given a string of digits, can calculate the largest product for a series of consecutive digits of length n.", :name=>"Largest Series Product"}, {:slug=>"leap", :blurb=>"Write a program that will take a year and report if it is a leap year.", :name=>"Leap"}, {:slug=>"linked-list", :blurb=>"Write a Singly-Linked List implementation that uses the Proxy pattern", :name=>"Linked List"}, {:slug=>"luhn", :blurb=>"Write a program that can take a number and determine whether or not it is valid per the Luhn formula.", :name=>"Luhn"}, {:slug=>"matrix", :blurb=>"Write a program that, given a string representing a matrix of numbers, can return the rows and columns of that matrix.", :name=>"Matrix"}, {:slug=>"meetup", :blurb=>"Calculate the date of meetups.", :name=>"Meetup"}, {:slug=>"minesweeper", :blurb=>"Write a program that adds the numbers to a minesweeper board", :name=>"Minesweeper"}, {:slug=>"nth-prime", :blurb=>"Write a program that can tell you what the nth prime is.", :name=>"Nth Prime"}, {:slug=>"nucleotide-count", :blurb=>"Given a DNA string, compute how many times each nucleotide occurs in the string.", :name=>"Nucleotide Count"}, {:slug=>"ocr-numbers", :blurb=>"Write a program that, given a 3 x 4 grid of pipes, underscores, and spaces, can determine which number is represented, or whether it is garbled.", :name=>"Ocr Numbers"}, {:slug=>"palindrome-products", :blurb=>"Write a program that can detect palindrome products in a given range.", :name=>"Palindrome Products"}, {:slug=>"pascals-triangle", :blurb=>"Write a program that computes Pascal's triangle up to a given number of rows.", :name=>"Pascals Triangle"}, {:slug=>"phone-number", :blurb=>"Write a program that cleans up user-entered phone numbers so that they can be sent SMS messages.", :name=>"Phone Number"}, {:slug=>"pig-latin", :blurb=>"Implement a program that translates from English to Pig Latin", :name=>"Pig Latin"}, {:slug=>"prime-factors", :blurb=>"Compute the prime factors of a given natural number.", :name=>"Prime Factors"}, {:slug=>"protein-translation", :blurb=>"Write a program that will translate RNA sequences into proteins.", :name=>"Protein Translation"}, {:slug=>"proverb", :blurb=>"For want of a horseshoe nail, a kingdom was lost, or so the saying goes. Write a program that outputs the full text of this proverbial rhyme.", :name=>"Proverb"}, {:slug=>"pythagorean-triplet", :blurb=>"There exists exactly one Pythagorean triplet for which a + b + c = 1000. Find the product a * b * c.", :name=>"Pythagorean Triplet"}, {:slug=>"queen-attack", :blurb=>"Write a program that positions two queens on a chess board and indicates whether or not they are positioned so that they can attack each other.", :name=>"Queen Attack"}, {:slug=>"raindrops", :blurb=>"Write a program that converts a number to a string, the contents of which depends on the number's prime factors.", :name=>"Raindrops"}, {:slug=>"rna-transcription", :blurb=>"Write a program that, given a DNA strand, returns its RNA complement (per RNA transcription).", :name=>"Rna Transcription"}, {:slug=>"robot-name", :blurb=>"Write a program that manages robot factory settings.", :name=>"Robot Name"}, {:slug=>"robot-simulator", :blurb=>"Write a robot simulator.", :name=>"Robot Simulator"}, {:slug=>"roman-numerals", :blurb=>"Write a function to convert from normal numbers to Roman Numerals: e.g.", :name=>"Roman Numerals"}, {:slug=>"saddle-points", :blurb=>"Write a program that detects saddle points in a matrix.", :name=>"Saddle Points"}, {:slug=>"say", :blurb=>"Write a program that will take a number from 0 to 999,999,999,999 and spell out that number in English.", :name=>"Say"}, {:slug=>"scale-generator", :blurb=>"Write a program that can generate musical scales, given a starting note and a set of intervals. ", :name=>"Scale Generator"}, {:slug=>"scrabble-score", :blurb=>"Write a program that, given a word, computes the scrabble score for that word.", :name=>"Scrabble Score"}, {:slug=>"secret-handshake", :blurb=>"Write a program that will take a decimal number, and convert it to the appropriate sequence of events for a secret handshake.", :name=>"Secret Handshake"}, {:slug=>"series", :blurb=>"Write a program that will take a string of digits and give you all the possible consecutive number series of length `n` in that string.", :name=>"Series"}, {:slug=>"sieve", :blurb=>"Write a program that uses the Sieve of Eratosthenes to find all the primes from 2 up to a given number.", :name=>"Sieve"}, {:slug=>"simple-cipher", :blurb=>"Implement a simple shift cipher like Caesar and a more secure substitution cipher", :name=>"Simple Cipher"}, {:slug=>"simple-linked-list", :blurb=>"Write a simple linked list implementation that uses Elements and a loop", :name=>"Simple Linked List"}, {:slug=>"space-age", :blurb=>"Write a program that, given an age in seconds, calculates how old someone is in terms of a given planet's solar years.", :name=>"Space Age"}, {:slug=>"strain", :blurb=>"Implement the `keep` and `discard` operation on collections. Given a collection and a predicate on the collection's elements, `keep` returns a new collection containing those elements where the predicate is true, while `discard` returns a new collection containing those elements where the predicate is false.", :name=>"Strain"}, {:slug=>"sum-of-multiples", :blurb=>"Write a program that, given a number, can find the sum of all the multiples of 3 or 5 up to but not including that number.", :name=>"Sum Of Multiples"}, {:slug=>"triangle", :blurb=>"Write a program that can tell you if a triangle is equilateral, isosceles, or scalene.", :name=>"Triangle"}, {:slug=>"trinary", :blurb=>"Write a program that will convert a trinary number, represented as a string (e.g. '102012'), to its decimal equivalent using first principles.", :name=>"Trinary"}, {:slug=>"twelve-days", :blurb=>"Write a program that outputs the lyrics to 'The Twelve Days of Christmas'", :name=>"Twelve Days"}, {:slug=>"word-count", :blurb=>"Write a program that given a phrase can count the occurrences of each word in that phrase.", :name=>"Word Count"}, {:slug=>"wordy", :blurb=>"Write a program that takes a word problem and returns the answer as an integer.", :name=>"Wordy"}]